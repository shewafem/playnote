"use client";

import Image from "next/image";
import Link from "next/link";
import { useTheme } from "next-themes";
import { useEffect, useState } from "react"; // Import useState and useEffect

const features = [
	{
		id: "feature-1",
		title: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∏—Ñ üé∏",
		description:
			"–û–±—É—á–∞—é—â–∏–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∏—Ñ –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –Ω–æ—Ç. –í—ã –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å —Å—Ç—Ä–æ–π –≥–∏—Ç–∞—Ä—ã, –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–Ω–∏–∫—É –∏ –≥–∞–º–º—ã, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–æ—Ç—ã –∏ –∞–∫–∫–æ—Ä–¥—ã, –∞ —Ç–∞–∫–∂–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—Ö —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –Ω–æ—Ç.",
		image: "/images/fretboard.png",
		darkImage: "/images/fretboard-dark.png",
		link: "/fretboard",
	},
	{
		id: "feature-2",
		title: "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–∫–∫–æ—Ä–¥–æ–≤ üé∂",
		description:
			"–û–±—à–∏—Ä–Ω–∞—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥–∏—Ç–∞—Ä–Ω—ã—Ö –∞–ø–ø–ª–∏–∫–∞—Ç—É—Ä, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –∏—Å–∫–∞—Ç—å –Ω—É–∂–Ω—ã–µ –∞–∫–∫–æ—Ä–¥—ã, –≤—ã–±–∏—Ä–∞—è —Ç–æ–Ω–∏–∫—É (C, D, E...) –∏ —Ç–∏–ø –∞–∫–∫–æ—Ä–¥–∞ (minor, major...). –ö–∞–∂–¥—ã–π –∞–∫–∫–æ—Ä–¥ –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –≤ SVG –∏–ª–∏ PNG. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–≤—É—á–∞–Ω–∏–µ –∞–∫–∫–æ—Ä–¥–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –Ω–µ–≥–æ.",
		image: "/images/chords.png",
		darkImage: "/images/chords-dark.png",
		link: "/chords",
	},
	{
		id: "feature-3",
		title: "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å–∏–π üéµ",
		description:
			"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–∫–∫–æ—Ä–¥–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–π —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–Ω–∏–∫–∏ –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–π –∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PNG.",
		image: "/images/progressions.png",
		darkImage: "/images/progressions-dark.png",
		link: "/progressions",
	},
	{
		id: "feature-4",
		title: "–û–Ω–ª–∞–π–Ω-–ø–ª–µ–µ—Ä —Ç–∞–±—É–ª–∞—Ç—É—Ä üéº",
		description:
			"–ü–ª–µ–µ—Ä alphaTab –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤-—Ç–∞–±—É–ª–∞—Ç—É—Ä (Guitar Pro —Ñ–∞–π–ª—ã .gp, MusicXML, alphaTex)",
		image: "/images/player.png",
		darkImage: "/images/player-dark.png",
		link: "/player",
	},
];

const Feature = () => {
	const { resolvedTheme } = useTheme();
	const [mounted, setMounted] = useState(false);

	// useEffect only runs on the client, so now we can safely show the UI
	useEffect(() => {
		setMounted(true);
	}, []);

	return (
		<section className="py-20 mx-auto flex items-center justify-center">
			<div className="container flex flex-col gap-8 lg:px-16">
				<div className="w-full">
					<h2 className="mb-3 text-xl font-extrabold leading-[1.15] tracking-tighter bg-clip-text text-transparent bg-gradient-to-r from-foreground to-primary md:mb-4 md:text-4xl lg:mb-6 text-center">
						–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
					</h2>
					<p className="mb-4 text-muted-foreground lg:text-lg text-center">
						–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –Ω–∞—É—á–∏—Ç—å—Å—è –∏–≥—Ä–∞—Ç—å –Ω–∞ –≥–∏—Ç–∞—Ä–µ.
					</p>
				</div>
				<div className="grid gap-6 md:grid-cols-2 lg:gap-8 items-start">
					{features.map((feature) => {
                        // Determine the correct image source
                        // Fallback to light image if not mounted or theme is not yet resolved correctly,
                        // though `resolvedTheme` should be stable once `mounted` is true.
                        const imageSrc = mounted && resolvedTheme === "dark" 
                            ? feature.darkImage 
                            : feature.image;
                        
                        // Alternatively, to avoid any flash and ensure layout is stable,
                        // you can render a placeholder until mounted.
                        if (!mounted) {
                            // Render a placeholder or null. A placeholder div with the same aspect ratio is best.
                            // This prevents the image from "popping in" and causing layout shift.
                            return (
                                <div key={feature.id} className="flex flex-col rounded-xl border border-border">
                                    <div className="aspect-16/9 h-full w-full bg-muted/20 animate-pulse" /> {/* Placeholder */}
                                    <div className="px-4 py-4 ">
                                        <h3 className="mb-3 text-lg font-semibold md:text-2xl">{feature.title}</h3>
                                        <p className="text-muted-foreground lg:text-lg">{feature.description}</p>
                                    </div>
                                </div>
                            );
                        }

						return (
							<div key={feature.id} className="flex flex-col rounded-xl border border-border">
								<Link href={feature.link}>
									<div>
										<Image
											width={1000}
											height={1000}
											src={imageSrc}
											alt={feature.title}
											className="aspect-16/9 h-full w-full object-contain"
										/>
									</div>
									<div className="px-4 py-4 ">
										<h3 className="mb-3 text-lg font-semibold md:text-2xl">{feature.title}</h3>
										<p className="text-muted-foreground lg:text-lg">{feature.description}</p>
									</div>
								</Link>
							</div>
						);
					})}
				</div>
			</div>
		</section>
	);
};

export { Feature };