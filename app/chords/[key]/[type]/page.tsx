// app/chords/[key]/[type]/page.tsx (–∏–ª–∏ –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–∞—à –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)

import ChordElement from "@/components/chords/chord-element";
// 1. –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –≤–∞—à–µ–≥–æ Prisma-—Å–µ—Ä–≤–∏—Å–∞
import { getChord, formatItem } from "@/data/utils"; // <-- –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å
import React from "react";

export default async function TypeOfChordsOfKey({ params }: { params: Promise<{key: string, type: string}> }) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ params
  const { key: rawKeyFromUrl, type: rawTypeFromUrl } = await params

  // 2. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º 'type' (—Å—É—Ñ—Ñ–∏–∫—Å) –∏–∑ URL –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π –≤ getChord.
  //    –§—É–Ω–∫—Ü–∏—è getChord –æ–∂–∏–¥–∞–µ—Ç, —á—Ç–æ —Å—É—Ñ—Ñ–∏–∫—Å —É–∂–µ –±—É–¥–µ—Ç –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "major", "minor#7"),
  //    –Ω–æ –æ–Ω–∞ —Å–∞–º–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç 'key'.
  const formattedSuffixForQuery = formatItem(rawTypeFromUrl);

  // 3. –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é getChord.
  //    –ü–µ—Ä–µ–¥–∞–µ–º 'rawKeyFromUrl' (getChord –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è —Å –ø–æ–º–æ—â—å—é formatItem)
  //    –∏ 'formattedSuffixForQuery'.
  const chord = await getChord(rawKeyFromUrl, formattedSuffixForQuery);

  if (!chord) {
    const displayKey = formatItem(rawKeyFromUrl);
    return (
      <div className="text-center py-8 text-muted-foreground">
        –ê–∫–∫–æ—Ä–¥ {displayKey} {formattedSuffixForQuery} –Ω–µ –Ω–∞–π–¥–µ–Ω üòî
      </div>
    );
  }
  return (
    <div className="self-start flex flex-col gap-4 bg-card text-card-foreground rounded-lg border border-border shadow-sm p-4 md:p-6">
      <h2 className="text-xl text-center md:text-2xl font-semibold">
        {`${chord.key} ${chord.suffix}`}
      </h2>
      <div className="grid gap-y-8 grid-cols-2 xs:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        {chord.positions.map((position, posIndex) => (
          <ChordElement
            key={posIndex}
            position={position}
            chordKey={chord.key}
            suffix={chord.suffix}
            posIndex={posIndex}
          />
        ))}
      </div>
    </div>
  );
}